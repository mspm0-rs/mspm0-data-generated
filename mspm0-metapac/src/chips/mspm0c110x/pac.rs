// This file is autogenerated by mspm0-metapac-gen: do not edit by hand.
#[cfg(feature = "rt")]
pub const NVIC_PRIO_BITS: u32 = 2;
#[derive(Copy, Clone, Debug, PartialEq, Eq)]
pub enum Interrupt {
    GROUP0 = 0,
    GPIOA = 1,
    TIMG8 = 2,
    ADC0 = 4,
    SPI0 = 9,
    UART0 = 15,
    TIMG14 = 16,
    TIMA0 = 18,
    I2C0 = 24,
    DMA = 31,
}
unsafe impl cortex_m::interrupt::InterruptNumber for Interrupt {
    #[inline(always)]
    fn number(self) -> u16 {
        self as u16
    }
}
#[repr(u8)]
pub enum Group0 {
    WWDT0 = 0,
    DEBUGSS = 2,
    FLASHCTL = 3,
    SYSCTL = 6,
}
impl TryFrom<u8> for Group0 {
    type Error = ();
    #[inline]
    fn try_from(value: u8) -> Result<Self, Self::Error> {
        match value {
            0 => Ok(Self::WWDT0),
            2 => Ok(Self::DEBUGSS),
            3 => Ok(Self::FLASHCTL),
            6 => Ok(Self::SYSCTL),
            _ => Err(()),
        }
    }
}
#[cfg(feature = "rt")]
mod _vectors {
    extern "C" {
        fn NonMaskableInt();
        fn HardFault();
        fn SVCall();
        fn PendSV();
        fn SysTick();
        fn GROUP0();
        fn GPIOA();
        fn TIMG8();
        fn ADC0();
        fn SPI0();
        fn UART0();
        fn TIMG14();
        fn TIMA0();
        fn I2C0();
        fn DMA();
    }
    #[repr(C)]
    pub union Vector {
        _handler: unsafe extern "C" fn(),
        _reserved: u32,
    }
    #[link_section = ".vector_table.interrupts"]
    #[no_mangle]
    pub static __INTERRUPTS: [Vector; 32] = [
        Vector { _handler: GROUP0 },
        Vector { _handler: GPIOA },
        Vector { _handler: TIMG8 },
        Vector { _reserved: 0 },
        Vector { _handler: ADC0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _handler: SPI0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _handler: UART0 },
        Vector { _handler: TIMG14 },
        Vector { _reserved: 0 },
        Vector { _handler: TIMA0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _handler: I2C0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _reserved: 0 },
        Vector { _handler: DMA },
    ];
}
#[cfg(feature = "rt")]
pub use cortex_m_rt::interrupt;
#[cfg(feature = "rt")]
pub use Interrupt as interrupt;
#[path = "../../peripherals/cpuss.rs"]
pub mod cpuss;
#[path = "../../peripherals/gpio.rs"]
pub mod gpio;
#[path = "../../peripherals/iomux.rs"]
pub mod iomux;
#[path = "../../peripherals/sysctl_c110x.rs"]
pub mod sysctl;
#[path = "../../peripherals/tim.rs"]
pub mod tim;
#[path = "../../peripherals/uart.rs"]
pub mod uart;
#[doc = "Address: 1073758208"]
pub const ADC0: () = ();
pub const CPUSS: cpuss::Cpuss = unsafe { cpuss::Cpuss::from_ptr(1077936128 as *mut _) };
#[doc = "Address: 1074556928"]
pub const DEBUGSS: () = ();
pub const GPIOA: gpio::Gpio = unsafe { gpio::Gpio::from_ptr(1074397184 as *mut _) };
#[doc = "Address: 1074724864"]
pub const I2C0: () = ();
pub const IOMUX: iomux::Iomux = unsafe { iomux::Iomux::from_ptr(1078099968 as *mut _) };
#[doc = "Address: 1078362112"]
pub const SPI0: () = ();
pub const SYSCTL: sysctl::Sysctl = unsafe { sysctl::Sysctl::from_ptr(1074458624 as *mut _) };
pub const TIMA0: tim::Tim = unsafe { tim::Tim::from_ptr(1082523648 as *mut _) };
pub const TIMG14: tim::Tim = unsafe { tim::Tim::from_ptr(1074282496 as *mut _) };
pub const TIMG8: tim::Tim = unsafe { tim::Tim::from_ptr(1074331648 as *mut _) };
pub const UART0: uart::Uart = unsafe { uart::Uart::from_ptr(1074823168 as *mut _) };
